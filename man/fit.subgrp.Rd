% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_subgroup.R
\name{fit.subgrp}
\alias{fit.subgrp}
\title{Fitting subgroup identification models}
\usage{
fit.subgrp(x, y, trt, propensity.func, family = c("gaussian", "binomial",
  "cox"), loss = c("sq_loss_lasso", "logistic_loss_lasso", "cox_loss_lasso"),
  method = c("weighting", "a_learning"), cutpoint = 0,
  larger.outcome.better = TRUE, retcall = TRUE, ...)
}
\arguments{
\item{x}{The design matrix (not including intercept term)}

\item{y}{The response vector}

\item{trt}{treatment vector with each element equal to a 0 or a 1, with 1 indicating
treatment status is active.}

\item{propensity.func}{function that inputs the design matrix x and the treatment vector trt and outputs
the propensity score, ie Pr(trt = 1 | X = x). Function should take two arguments 1) x and 2) trt. See example below.
For a randomized controlled trial this can simply be a function that returns a constant equal to the proportion
of patients assigned to the treatment group, i.e.:
\code{propensity.func = function(x, trt) 0.5}.}

\item{family}{family for the response. \code{gaussian} for continuous outcomes, \code{binomial} for binomial outcomes,
and \code{cox} for time-to-event outcomes}

\item{loss}{choice of both the M function from Chen, et al (2017) and potentially the penalty used for variable selection.
All \code{loss} options starting with \code{sq_loss} use M(y, v) = (v - y) ^ 2, all options starting with \code{logistic_loss} use
the logistic loss: M(y, v) = y * log(1 + exp{-v}), and all options starting with \code{cox_loss} use the negative partial likelihood loss for the Cox PH model.
All options ending with \code{lasso} have a lasso penalty added to the loss for variable selection}

\item{method}{subgroup ID model type. Either the weighting or A-learning method of Chen et al, (2017)}

\item{cutpoint}{numeric value for patients with benefit scores above which
(or below which if \code{larger.outcome.better = FALSE})
will be recommended to be in the treatment group}

\item{larger.outcome.better}{boolean value of whether a larger outcome is better/preferable. Set to \code{TRUE}
if a larger outcome is better/preferable and set to \code{FALSE} if a smaller outcome is better/preferable. Defaults to \code{TRUE}.}

\item{retcall}{boolean value. if \code{TRUE} then the passed arguments will be saved. Do not set to \code{FALSE}
if the \code{validate.subgrp()} function will later be used for your fitted subgroup model. Only set to \code{FALSE}
if memory is limited as setting to code{TRUE} saves the design matrix to the fitted object}

\item{...}{options to be passed to underlying fitting function. For all \code{loss} options with \code{lasso},
this will be passed to \code{cv.glmnet} and for all \code{loss} options with \code{mcp} this will be passed
to \code{cv.ncvreg}.}
}
\description{
Fits subgroup identification model class of Chen, et al (2017)
}
\examples{
library(personalized)

set.seed(123)
n.obs  <- 500
n.vars <- 50
x <- matrix(rnorm(n.obs * n.vars, sd = 3), n.obs, n.vars)


# simulate non-randomized treatment
xbetat   <- 0.5 + 0.5 * x[,21] - 0.5 * x[,41]
trt.prob <- exp(xbetat) / (1 + exp(xbetat))
trt01    <- rbinom(n.obs, 1, prob = trt.prob)

trt      <- 2 * trt01 - 1

# simulate response
delta <- 2 * (0.5 + x[,2] - x[,3] - x[,11] + x[,1] * x[,12])
xbeta <- x[,1] + x[,11] - 2 * x[,12]^2 + x[,13]
xbeta <- xbeta + delta * trt

# continuous outcomes
y <- drop(xbeta) + rnorm(n.obs, sd = 2)

# binary outcomes
y.binary <- 1 * (xbeta + rnorm(n.obs, sd = 2) > 0 )

# time-to-event outcomes
surv.time <- exp(-20 - xbeta + rnorm(n.obs, sd = 1))
cens.time <- exp(rnorm(n.obs, sd = 3))
y.time.to.event  <- pmin(surv.time, cens.time)
status           <- 1 * (surv.time <= cens.time)

# create function for fitting propensity score model
prop.func <- function(x, trt)
{
    # fit propensity score model
    propens.model <- cv.glmnet(y = trt,
                               x = x, family = "binomial")
    pi.x <- predict(propens.model, s = "lambda.min",
                    newx = x, type = "response")[,1]
    pi.x
}

subgrp.model <- fit.subgrp(x = x, y = y,
                           trt = trt01,
                           propensity.func = prop.func,
                           family = "gaussian",
                           loss   = "sq_loss_lasso",
                           nfolds = 5)              # option for cv.glmnet

subgrp.model$subgroup.trt.effects

subgrp.model.bin <- fit.subgrp(x = x, y = y.binary,
                           trt = trt01,
                           propensity.func = prop.func,
                           family = "binomial",
                           loss   = "logistic_loss_lasso",
                           type.measure = "auc",    # option for cv.glmnet
                           nfolds = 5)              # option for cv.glmnet

subgrp.model.bin$subgroup.trt.effects

library(survival)
subgrp.model.cox <- fit.subgrp(x = x, y = Surv(y.time.to.event, status),
                           trt = trt01,
                           propensity.func = prop.func,
                           family = "cox",
                           loss   = "cox_loss_lasso",
                           nfolds = 5)              # option for cv.glmnet

subgrp.model.cox$subgroup.trt.effects


}
\references{
Chen, S., Tian, L., Cai, T. and Yu, M. (2017), A general statistical framework for subgroup identification
and comparative treatment scoring. Biometrics. doi:10.1111/biom.12676 \url{http://onlinelibrary.wiley.com/doi/10.1111/biom.12676/abstract}
}
\seealso{
\code{\link[personalized]{validate.subgrp}} for function which creates validation results for subgroup
identification models, \code{\link[personalized]{predict.subgroup_fitted}} for a prediction function for fitted models
from \code{fit.subgrp}, and \code{\link[personalized]{plot.subgroup_fitted}} for a function which plots
results from fitted models
from \code{fit.subgrp}.
}

